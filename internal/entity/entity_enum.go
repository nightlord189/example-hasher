// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package entity

import (
	"errors"
	"fmt"
)

const (
	// HashTypeSHA256 is a HashType of type SHA256.
	HashTypeSHA256 HashType = "SHA256"
	// HashTypeSHA512 is a HashType of type SHA512.
	HashTypeSHA512 HashType = "SHA512"
)

var ErrInvalidHashType = errors.New("not a valid HashType")

// String implements the Stringer interface.
func (x HashType) String() string {
	return string(x)
}

// String implements the Stringer interface.
func (x HashType) IsValid() bool {
	_, err := ParseHashType(string(x))
	return err == nil
}

var _HashTypeValue = map[string]HashType{
	"SHA256": HashTypeSHA256,
	"SHA512": HashTypeSHA512,
}

// ParseHashType attempts to convert a string to a HashType.
func ParseHashType(name string) (HashType, error) {
	if x, ok := _HashTypeValue[name]; ok {
		return x, nil
	}
	return HashType(""), fmt.Errorf("%s is %w", name, ErrInvalidHashType)
}

// MarshalText implements the text marshaller method.
func (x HashType) MarshalText() ([]byte, error) {
	return []byte(string(x)), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *HashType) UnmarshalText(text []byte) error {
	tmp, err := ParseHashType(string(text))
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}
